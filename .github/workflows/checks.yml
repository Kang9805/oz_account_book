# .github/workflows/checks.yml

name: Code Quality & Tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  ci:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions:setup-python@v5
      with:
        python-version: '3.12'

    # 1. uv 설치
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    # 2. 의존성 설치 및 가상 환경 경로 PATH 추가
    - name: Install Dependencies and Activate Venv
      run: |
        # ✅ uv sync만 실행 (기본적으로 개발 의존성 포함 설치)
        uv sync 
        # ruff가 설치된 가상환경 경로를 PATH에 추가
        echo "$PWD/.venv/bin" >> $GITHUB_PATH

    # 3. ruff 실행 (python -m으로 PATH 오류 우회)
    - name: Run Ruff (Linting & Formatting Check)
      run: python -m ruff check .

    - name: Run Django Migration & Tests
      env:
        DATABASE_URL: postgres://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@localhost:5432/${