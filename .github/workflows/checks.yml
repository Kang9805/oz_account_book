# .github/workflows/checks.yml

name: Code Quality & Tests

on:
  push:
    branches:
      - main # main 브랜치에 PUSH 될 때 실행
  pull_request: # PR 요청 시 실행

jobs:
  ci:
    runs-on: ubuntu-latest # GitHub Actions 환경

    # PostgreSQL 서비스 정의
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432 # localhost:5432로 연결
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    # uv 설치 및 PATH 설정
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    # 의존성 설치
    - name: Install Dependencies
      run: uv sync

    # 코드 품질 검사 (Ruff)
    - name: Run Ruff (Linting & Formatting Check)
      run: uv run ruff check .

    # Django 마이그레이션 실행 및 테스트
    - name: Run Django Migration & Tests
      # Django가 DB에 연결할 수 있도록 DATABASE_URL 환경 변수 설정
      env:
        # DB 연결 문자열: postgres://USER:PASSWORD@HOST:PORT/NAME
        DATABASE_URL: postgres://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@localhost:5432/${{ secrets.DB_NAME }}
      run: |
        # 1. 마이그레이션 (DB에 테이블 생성)
        uv run python manage.py migrate --no-input
        # 2. 테스트 실행
        uv run python manage.py test